.\" Automatically generated by Pandoc 2.14.0.3
.\"
.TH "SONIVOXRENDER" "1" "October 27, 2024" "sonivox 3.6.15.0" "Sonivox MIDI File Renderer"
.hy
.SH NAME
.PP
\f[B]sonivoxrender\f[R] \[em] Render standard MIDI files into raw PCM
audio
.SH SYNOPSIS
.PP
\f[B]sonivoxrender\f[R] [\f[B]-h|--help\f[R]] [\f[B]-v|--version\f[R]]
[\f[B]-d|--dls\f[R] \f[I]file.dls\f[R]] [\f[B]-r|--reverb\f[R]
\f[I]0..4\f[R]] [\f[B]-w|--wet\f[R] \f[I]0..32767\f[R]]
[\f[B]-n|--dry\f[R] \f[I]0..32767\f[R]] [\f[B]-c|--chorus\f[R]
\f[I]0..4\f[R]] [\f[B]-l|--level\f[R] \f[I]0..32767\f[R]]
[\f[B]-g|--gain\f[R] \f[I]0..100\f[R]] \f[I]midi_file\f[R]
.SH DESCRIPTION
.PP
This program is a MIDI file renderer based on the sonivox synthesizer
library.
It reads .MID (Standard MIDI Files) file format, and writes an audio
stream to the standard output as raw 16 bit stereo PCM samples.
.SS Options
.TP
-h, --help
Prints brief usage information.
.TP
-v, --version
Prints the version numbers.
.TP
-d, --dls \f[I]file.dls\f[R]
Optional DLS soundfont file name.
If not provided, it uses an internal embedded soundfont.
.TP
-r, --reverb \f[I]reverb_preset\f[R]
Reverb preset between 0 and 4: 0=no, 1=large hall, 2=hall, 3=chamber,
4=room.
.TP
-w, --wet \f[I]reverb_wet\f[R]
Reverb wet level between 0 and 32767.
.TP
-n, --dry \f[I]reverb_dry\f[R]
Reverb dry level between 0 and 32767.
.TP
-c, --chorus \f[I]chorus_preset\f[R]
Chorus preset between 0 and 4: 0=no, 1..4=presets.
.TP
-l, --level \f[I]chorus_level\f[R]
Chorus level between 0 and 32767.
.TP
-g, --gain \f[I]master_gain\f[R]
Master gain between 0 and 100, default is 90 (10 dB below maximum).
.SS Arguments
.TP
\f[I]midi_file\f[R]
Input MID file name.
.SH EXAMPLES
.PP
The following examples assume the default option USE_44KHZ=ON, which
means an output sample rate = 44100 Hz.
.PP
Example 1: Render a MIDI file and save the rendered audio as a raw audio
file:
.IP
.nf
\f[C]
$ sonivoxrender ants.mid > ants.pcm
\f[R]
.fi
.PP
Example 2: pipe the rendered audio thru the Linux ALSA \f[B]aplay\f[R]
utility:
.IP
.nf
\f[C]
$ sonivoxrender ants.mid | aplay -c 2 -f S16_LE -r 44100
\f[R]
.fi
.PP
is equivalent to:
.IP
.nf
\f[C]
$ sonivoxrender ants.mid | aplay -f cd
\f[R]
.fi
.PP
Example 3: pipe the rendered audio thru the \f[B]lame\f[R] utility
creating a MP3 file:
.IP
.nf
\f[C]
$ sonivoxrender ants.mid | lame -r -s 44100 - ants.mp3
\f[R]
.fi
.PP
Example 4: pipe the rendered audio thru the \f[B]sox\f[R] utility
creating a WAV file:
.IP
.nf
\f[C]
$ sonivoxrender ants.mid | sox -t s16 -c 2 -r 44100 - ants.wav
\f[R]
.fi
.PP
Example 5: pipe the rendered audio thru the PulseAudio\[cq]s
\f[B]pacat\f[R] utility:
.IP
.nf
\f[C]
$ sonivoxrender ants.mid | pacat
\f[R]
.fi
.SH BUGS
.PP
See Tickets at GitHub <https://github.com/pedrolcl/sonivox/issues/>
.SH LICENSE AND COPYRIGHT
.PP
Licensed under the Apache License, Version 2.0
.PP
Copyright (c) 2022-2024 Pedro L\['o]pez-Cabanillas and contributors
.SH AUTHORS
Pedro L\['o]pez-Cabanillas <plcl@users.sf.net>.
